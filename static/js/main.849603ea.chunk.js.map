{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","App","movieList","moviesFromServer","useState","setMovies","searchValue","setSearchValue","useEffect","sortedMovies","filter","toLowerCase","descr","toLocaleLowerCase","substring","includes","preRender","htmlFor","type","id","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"6RAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BChCGQ,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCGfC,EAAgB,WAC3B,IAAMC,EAAS,YAAOC,GACtB,EAA4BC,mBAAmBF,GAA/C,mBAAOJ,EAAP,KAAeO,EAAf,KACA,EAAsCD,mBAAiB,IAAvD,mBAAOE,EAAP,KAAoBC,EAApB,KAuBA,OAJAC,qBAAU,YAlBQ,WAChB,IAAMC,EAAeP,EAAUQ,QAAO,SAAAtB,GACpC,IAAMI,EAAQJ,EAAMI,MAAMmB,cACpBC,EAAQxB,EAAMG,YAAYsB,oBAC1BC,EAAYR,EAAYO,oBAE9B,QAAoB,KAAhBP,IACGM,EAAMG,SAASD,KACftB,EAAMuB,SAASD,OAOxBT,EAAUI,GAIVO,KACC,CAACV,IAGF,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOwB,QAAQ,eAAexB,UAAU,QAAxC,0BAGA,qBAAKA,UAAU,UAAf,SACE,uBACEyB,KAAK,OACLC,GAAG,eACH1B,UAAU,QACV2B,YAAY,mBACZC,MAAOf,EACPgB,SAAU,SAAAC,GAAK,OAAIhB,GAAe,kBAAMgB,EAAMC,OAAOH,mBAM7D,cAAC,EAAD,CAAYvB,OAAQA,OAGtB,qBAAKL,UAAU,UAAf,mCC7DNgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.849603ea.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\ntype Movies = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport const App: React.FC = () => {\n  const movieList = [...moviesFromServer];\n  const [movies, setMovies] = useState<Movies[]>(movieList);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const preRender = ():void => {\n    const sortedMovies = movieList.filter(movie => {\n      const title = movie.title.toLowerCase();\n      const descr = movie.description.toLocaleLowerCase();\n      const substring = searchValue.toLocaleLowerCase();\n\n      if (searchValue === ''\n          || descr.includes(substring)\n          || title.includes(substring)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    setMovies(sortedMovies);\n  };\n\n  useEffect(() => {\n    preRender();\n  }, [searchValue]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={searchValue}\n                onChange={event => setSearchValue(() => event.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}